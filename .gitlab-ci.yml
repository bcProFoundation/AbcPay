stages:
  - configure
  - package
  - deploy

# before_script:
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  # - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
#   - 'which ssh-agent || ( apk update && apk add openssh-client )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  # - eval $(ssh-agent -s)

  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  # - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  # - mkdir -p ~/.ssh
  # - chmod 700 ~/.ssh

  ##
  ## Optionally, if you will be using any Git commands, set the user name and
  ## and email.
  ##
  # - git config --global user.email "user@example.com"
  # - git config --global user.name "User name"

configure:
  stage: configure
  only:
     - vant/deploy
  image: tarampampam/node:10-alpine
  script:
    - npm i yalc -g
    - git clone https://${BITCORE_USER_NAME}:${BITCORE_DEPLOY_TOKEN}@gitlab.com/abcpros/bitcore.git
    - cd bitcore
    - git checkout master
    - yalc publish
    - cd ..
    - npm install 
    - yalc add abcpros-bitcore
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - node_modules/
  artifacts:
    untracked: true
    paths:
      - www/

package-android:
  image: beevelop/cordova:latest
  stage: package
  only:
     - vant/deploy
  dependencies:
    - build
  script:
    # - chmod +x update-version.sh
    # - "[[ -z $CI_COMMIT_TAG ]] || ./update-version.sh $CI_COMMIT_TAG"
    # - mkdir $ANDROID_HOME/licenses
    # - echo '<result from cat>' > $ANDROID_HOME/licenses/android-sdk-license
    # - cordova platform add android
    # - echo n | cordova build android --release
    - npm run apply:abcpay
    - mkdir -p src/environments/index.ts
    - chmod 777 src/environments/index.ts
    - npm run config -- --environment=development
    - npm run prepare:abcpay
    - npm run final:android
    - echo $(ls platforms/android/app/build/outputs/apk/release)
    - cp platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk app-release-unsigned.apk
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - node_modules/
      - platforms/
      - plugins/
  artifacts:
    paths:
      - app-release-unsigned.apk

# deploy-android:
#   image: tygrinn/android-deploy:latest
#   stage: deploy
#   dependencies:
#     - package-android
#   only:
#     - tags
#   script:
#     - jarsigner -sigalg SHA1withRSA -digestalg SHA1 -keystore ./fastlane/<app-name>.keystore app-release-unsigned.apk <alias-name> -storepass $KEYSTORE_PASS
#     - zipalign -v 4 app-release-unsigned.apk app-release.apk
#     - fastlane supply --apk app-release.apk --track beta --package_name com.example.myapp
#   artifacts:
#     paths:
#       - app-release.apk